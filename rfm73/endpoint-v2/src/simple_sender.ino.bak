
/*
本机为客户端，本机地址：3:90
              服务器地址：1:81
第一步：
        连接
第二步：
        按了一个按键就发送一个时间请求（得到当时时间）
 */

#include <rfm73.h>
#include <comm.h>
#include <user_activity.h>

/*************************/
#define LOCAL_ADDR      3
#define LOCAL_PORT      90
#define REMOTE_ADDR     1 
#define REMOTE_PORT     81
/*************************/

byte sendbuf[32];
user_activity *act = new user_activity();
COMM comm(SERVER_ID, &RFM, act);

void mysend(const char *buf, unsigned char len)
{
        byte *p;
        p = &sendbuf[4];
        memcpy(p, buf, len);

        p = sendbuf;
        RFM.send((byte*)p, len+4);
}

byte connect(void)
{
        byte *p;
        mysend("1", 1);
        delay(100);
        RFM.tick();
        p = RFM.getRcvBuffer();
        if (p[4] == '2') {
                Serial.println("connected!");
                return 1;
        }
        Serial.println("not connected!");
        return 0;

}

byte mytask1(void)
{
	  char buf[32];
        char *p;
        mysend("gettime", 7);
        delay(100);
        RFM.tick();
        p = (char *)RFM.getRcvBuffer();

	if ((p[2] == LOCAL_ADDR) && (p[3] == LOCAL_PORT)) {
	  Serial.println("___________________________>receive!");
#if 0
	  char *p = (char *)RFM.getRcvBuffer();
	  sprintf(buf, "%d:%d->%d:%d >%s",p[0], p[1], p[2], p[3], &p[4]);
	  Serial.println(buf);
#endif
               return 1;
        }
        return 0;
}

void setup()
{
        sendbuf[0] = LOCAL_ADDR;
        sendbuf[1] = LOCAL_PORT;
        sendbuf[2] = REMOTE_ADDR;
        sendbuf[3] = REMOTE_PORT;

        //Serial connection for debugging
        Serial.begin(9600);
        Serial.println("##reset##");

        RFM.Begin();
        RFM.onReceive(receiveEvent);
}

void loop()
{

        for(;;) {
                if (connect() == 1)
                        break;
                delay(50);
        }

        for (;;) {
	mytask1();
        delay(2000);
        }
}

void receiveEvent(void){
  //print received data
#if 1
  char buf[32];
  char *p = (char *)RFM.getRcvBuffer();
  sprintf(buf, "%d:%d->%d:%d >%s",p[0], p[1], p[2], p[3], &p[4]);
  Serial.println(buf);
#endif
}
